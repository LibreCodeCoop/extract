/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/ocs/v2.php/apps/extract/api/{apiVersion}/extraction/execute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** The only AJAX callback. This is a hook for ordinary cloud-users, os no admin required */
        post: operations["extraction-execute"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        Capabilities: {
            features: string[];
            config: Record<string, never>;
            version: string;
        };
        Folder: {
            /** Format: int64 */
            fileId: number;
            source: string;
            root: string;
            owner: string | null;
            /** Format: int64 */
            permissions: number;
            /** Format: int64 */
            mtime: number;
            "mount-type": string;
            "owner-display-name": string | null;
        };
        OCSMeta: {
            status: string;
            statuscode: number;
            message?: string;
            totalitems?: string;
            itemsperpage?: string;
        };
        PublicCapabilities: {
            extract?: components["schemas"]["Capabilities"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
    "extraction-execute": {
        parameters: {
            query?: never;
            header: {
                /** @description Required to be true for the API request to pass */
                "OCS-APIRequest": boolean;
            };
            path: {
                apiVersion: "v1";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Name of the file to be extracted */
                    nameOfFile: string;
                    /** @description Directory where the file is located */
                    directory: string;
                    /** @description Is the file located on an external storage? */
                    external: boolean;
                    /** @description MIME type of the file */
                    mime: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: {
                                /**
                                 * Format: int64
                                 * @enum {integer}
                                 */
                                code?: 0 | 1;
                                desc?: string;
                                extracted?: components["schemas"]["Folder"];
                            };
                        };
                    };
                };
            };
            /** @description Not found or invalid path */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ocs: {
                            meta: components["schemas"]["OCSMeta"];
                            data: unknown;
                        };
                    };
                };
            };
        };
    };
}
